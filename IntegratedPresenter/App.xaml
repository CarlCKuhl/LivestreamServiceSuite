<Application x:Class="IntegratedPresenter.Main.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:IntegratedPresenter.Main"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Color x:Key="red">#d60d49</Color>
        <Color x:Key="green">#0dd67c</Color>
        <Color x:Key="teal">#0dd6a0</Color>
        <Color x:Key="dark">#171717</Color>
        <Color x:Key="light">#272727</Color>
        <Color x:Key="gray">#8f8f8f</Color>
        <Color x:Key="white">#efefef</Color>
        <SolidColorBrush x:Key="redBrush" Color="{StaticResource red}"></SolidColorBrush>
        <SolidColorBrush x:Key="greenBrush" Color="{StaticResource green}"></SolidColorBrush>
        <SolidColorBrush x:Key="tealBrush" Color="{StaticResource teal}"></SolidColorBrush>
        <SolidColorBrush x:Key="darkBrush" Color="{StaticResource dark}"></SolidColorBrush>
        <SolidColorBrush x:Key="lightBrush" Color="{StaticResource light}"></SolidColorBrush>
        <SolidColorBrush x:Key="grayBrush" Color="{StaticResource gray}"></SolidColorBrush>
        <SolidColorBrush x:Key="whiteBrush" Color="{StaticResource white}"></SolidColorBrush>

        <SolidColorBrush x:Key="activeTextBrush" Color="{StaticResource teal}"></SolidColorBrush>

        <Style x:Key="DarkMenu" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="#0f0f0f"></Setter>
            <Setter Property="Foreground" Value="#ededed"></Setter>
        </Style>

        <Style x:Key="DarkMenuItem" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="#0f0f0f"></Setter>
            <Setter Property="Foreground" Value="#ededed"></Setter>
        </Style>

        <Style x:Key="DarkMenuHeader" TargetType="{x:Type HeaderedItemsControl}">
            <Setter Property="Background" Value="#0f0f0f"></Setter>
            <Setter Property="Foreground" Value="#ededed"></Setter>
        </Style>


        <Style x:Key="CheckBackgroundFill" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill">
                <Setter.Value>
                    <DrawingBrush TileMode="Tile" Viewport="0,0,32,32" ViewportUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <GeometryDrawing Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0z" Brush="LightGray"/>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Opacity">
                <Setter.Value>0.1</Setter.Value>
            </Setter>
        </Style>




        <ControlTemplate x:Key="DarkMenuItemControl" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#010101" BorderThickness="1" Background="#0f0f0f" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#0d0d0d" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#0101018a"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="orange"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#ededed"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#010101"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <RadialGradientBrush x:Key="RedLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#99021b" Offset="1.5"></GradientStop>
                <GradientStop Color="#cf3a53" Offset="0.9"></GradientStop>
                <GradientStop Color="#99021b" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="GrayLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#474747" Offset="1.5"></GradientStop>
                <GradientStop Color="#373737" Offset="0.9"></GradientStop>
                <GradientStop Color="#474747" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="OffLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#373737" Offset="1.5"></GradientStop>
                <GradientStop Color="#272727" Offset="0.9"></GradientStop>
                <GradientStop Color="#373737" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>

        <RadialGradientBrush x:Key="GreenLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#2b9962" Offset="1.5"></GradientStop>
                <GradientStop Color="#51db8f" Offset="0.9"></GradientStop>
                <GradientStop Color="#2b9962" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="YellowLight">
            <RadialGradientBrush.GradientOrigin>0.5, 0.5</RadialGradientBrush.GradientOrigin>
            <RadialGradientBrush.Center>0.5, 0.5</RadialGradientBrush.Center>
            <RadialGradientBrush.GradientStops>
                <GradientStop Color="#a6a807" Offset="1.5"></GradientStop>
                <GradientStop Color="#ecf018" Offset="0.9"></GradientStop>
                <GradientStop Color="#a6a807" Offset="0"></GradientStop>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>

        <Style x:Key="UIShortcutBdr" TargetType="Border">
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="BorderThickness" Value="3"></Setter>
            <Setter Property="CornerRadius" Value="10"></Setter>
            <Setter Property="Panel.ZIndex" Value="1"></Setter>
            <Setter Property="Padding" Value="15, 8, 15, 8"></Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0.5"></SolidColorBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Border.Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="3" Direction="-120" Color="White" Opacity="0.9" BlurRadius="2"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UIShortcut" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Panel.ZIndex" Value="2"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
            <!--<Setter Property="TextBlock.Effect">-->
            <!--<Setter.Value>-->
            <!--<DropShadowEffect ShadowDepth="4" Direction="-120" Color="Gray" Opacity="0.8" BlurRadius="1"/>-->
            <!--</Setter.Value>-->
            <!--</Setter>-->
            <Setter Property="FontSize" Value="50"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
        </Style>

        <Style x:Key="GrayText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#5f5f5f"></Setter>
        </Style>

        <Style x:Key="GroupBorder" TargetType="Border">
            <Setter Property="Background" Value="#171717"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="CornerRadius" Value="10,10,10,10"></Setter>
            <Setter Property="BorderBrush" Value="#272727"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
        </Style>


        <Style x:Key="darkTextbox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#1f1f1f"></Setter>
            <Setter Property="Cursor" Value="IBeam"></Setter>
            <Setter Property="Foreground" Value="Orange"></Setter>
            <Setter Property="BorderBrush" Value="DarkGray"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="CaretBrush" Value="White"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="3"></Setter>
        </Style>

        <Style x:Key="SwitcherButton"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="{StaticResource GrayLight}"></Setter>
            <Setter Property="Foreground" Value="#efefef"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#02a1e0" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="5" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

            </Style.Triggers>
        </Style>

        <Style x:Key="SwitcherButton_Disabled"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="{StaticResource OffLight}"></Setter>
            <Setter Property="Foreground" Value="#8a8a8a"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TextButton"  TargetType="{x:Type Button}">
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,1" Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#02a1e0" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="InactiveSwitcherButton"  TargetType="{x:Type Button}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="Foreground" Value="Gray"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Gray" BorderThickness="1,1,1,1" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PIPControlButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="BorderOnAir" BorderThickness="2" BorderBrush="{TemplateBinding Property=Background}">
                            <Border Name="Border" BorderBrush="Gray" BorderThickness="1">
                                <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"></ContentPresenter>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="Orange" TargetName="Border"></Setter>
                                <Setter Property="BorderThickness" Value="1,1,1,1" TargetName="Border"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="InactivePIPControlButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="80"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Focusable" Value="False"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Name="Border" BorderBrush="Gray" BorderThickness="1">
                            <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Application.Resources>
</Application>
